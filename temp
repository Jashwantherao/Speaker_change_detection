# Import necessary libraries
from keras.layers import Input, Conv1D, MaxPooling1D, Flatten, Dense
from keras.models import Model

# Define input shape and batch size
input_shape = (None, num_features)
batch_size = 32

# Create input layer
input_frame = Input(input_shape, name='main_input')

# Add 1D convolutional layers with max pooling
conv1 = Conv1D(filters=32, kernel_size=3, activation='relu')(input_frame)
max_pool1 = MaxPooling1D(pool_size=2)(conv1)
conv2 = Conv1D(filters=64, kernel_size=3, activation='relu')(max_pool1)
max_pool2 = MaxPooling1D(pool_size=2)(conv2)

# Flatten and add fully connected layer
flatten = Flatten()(max_pool2)
fc = Dense(1, activation='sigmoid')(flatten)

# Create model and compile
model = Model(input_frame, fc)
model.compile(loss='binary_crossentropy', optimizer='adam', metrics=['accuracy'])

# Train model
model.fit(X_train, y_train, batch_size=batch_size, epochs=30)
